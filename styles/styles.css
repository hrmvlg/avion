@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Clash Display";
  font-weight: 400;
  src: url("../fonts/ClashDisplay-Regular.woff2") format("woff2");
  font-style: normal;
}
@font-face {
  font-family: "Clash Display";
  font-weight: 500;
  src: url("../fonts/ClashDisplay-Medium.woff2") format("woff2");
  font-style: normal;
}
@font-face {
  font-family: "Satoshi";
  font-weight: 400;
  src: url("../fonts/Satoshi-Regular.woff2") format("woff2");
  font-style: normal;
}
body {
  font-size: clamp(18px, 1.25vw, 14px);
  font-family: var(--font-family-base);
  color: var(--color-dark-primary);
  line-height: 1.5;
  background-color: var(--color-white);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  border: none;
  box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 400;
  line-height: 1.4;
}

h1 {
  font-style: 36px;
}

h2 {
  font-style: 32px;
}

h3 {
  font-style: 24px;
}

h4 {
  font-style: 20px;
}

h5 {
  font-style: 16px;
}

h6 {
  font-style: 14px;
}

:root {
  --color-primary: #4e4d93;
  --color-primary-light: #726e8d;
  --color-primary-dark: #2a254b;
  --color-primary-dark-hover: #1e193e;
  --color-light-gray: #f9f9f9;
  --color-border-gray: #ebe8f4;
  --color-border-dark: #cac6da;
  --color-white: #ffffff;
  --border-button: 2px solid var(--color-primary);
  --border-button-small: 1px solid var(--color-primary);
  --font-family-base: "Satoshi", sans-serif;
  --second-family: "Clash Display", sans-serif;
  --container-width: 1280px;
  --container-padding-x: 80px;
  --transition-duration: 0.3s;
}
@media (max-width: 390px) {
  :root {
    --section-padding-x: 24px;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 390px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 389px) {
  .visible-mobile {
    display: none !important;
  }
}

.button {
  height: var(--button-height);
  padding: 16px 32px;
  font-size: 16px;
}
.button:focus {
  border: var(--border-button);
}
.button:disabled {
  opacity: 0.5;
}
.button--white {
  background-color: var(--color-white);
}
@media (hover: hover) {
  .button--white:hover {
    background-color: var(--color-light-gray);
  }
}
@media (hover: none) {
  .button--white:active {
    background-color: var(--color-light-gray);
  }
}
.button--secondary {
  background-color: var(--color-light-gray);
}
@media (hover: hover) {
  .button--secondary:hover {
    background-color: var(--color-border-gray);
  }
}
@media (hover: none) {
  .button--secondary:active {
    background-color: var(--color-border-gray);
  }
}
.button--primary {
  background-color: var(--color-dark-primary);
  color: var(--color-white);
}
@media (hover: hover) {
  .button--primary:hover {
    background-color: var(--color-dark-primary-hover);
  }
}
@media (hover: none) {
  .button--primary:active {
    background-color: var(--color-dark-primary-hover);
  }
}
.button--opaque {
  background-color: rgba(249, 249, 249, 0.15);
  color: var(--color-white);
  border: var(--border-button-small);
}
@media (hover: hover) {
  .button--opaque:hover {
    background-color: rgba(249, 249, 249, 0.3);
    border: none;
  }
}
@media (hover: none) {
  .button--opaque:active {
    background-color: rgba(249, 249, 249, 0.3);
    border: none;
  }
}
.button--ghost {
  background-color: transparent;
}
@media (hover: hover) {
  .button--ghost:hover {
    background-color: var(--color-border-gray);
  }
}
@media (hover: none) {
  .button--ghost:active {
    background-color: var(--color-border-gray);
  }
}
.button--ghost:disabled {
  border: var(--border-button-small);
}

.icon {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 16px;
  height: 16px;
  aspect-ratio: 1;
}

.header {
  padding-top: 26px;
  display: flex;
  flex-direction: column;
  padding-inline: 28px;
}
.header__top {
  display: flex;
  -moz-column-gap: 20px;
       column-gap: 20px;
  align-items: center;
  justify-content: space-between;
  position: relative;
}
@media (max-width: 390px) {
  .header__top {
    justify-content: end;
  }
}
@media (max-width: 390px) {
  .header__top-search {
    order: -2;
  }
}
.header__top-logo {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}
@media (max-width: 390px) {
  .header__top-logo {
    position: unset;
    translate: 0 !important;
    order: -3;
    margin-right: auto;
  }
}
.header__top-group {
  display: flex;
  -moz-column-gap: 16px;
       column-gap: 16px;
}
.header__menu {
  padding-top: 20px;
  margin-top: 28px;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}
.header__menu-list {
  display: flex;
  justify-content: center;
  -moz-column-gap: 44px;
       column-gap: 44px;
  font-size: 16px;
}
.header__menu-item {
  position: relative;
  color: var(--color-primary-light);
}
@media (hover: hover) {
  .header__menu-item:hover {
    color: var(--color-primary-dark);
  }
  .header__menu-item:hover::after {
    width: 100%;
  }
}
@media (hover: none) {
  .header__menu-item:active {
    color: var(--color-primary-dark);
  }
  .header__menu-item:active::after {
    width: 100%;
  }
}
.header__menu-item::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 2px;
  background-color: var(--color-primary-dark);
  transition-duration: inherit;
}
@media (max-width: 390px) {
  .header__burger-button {
    order: -1;
  }
}

.mobile-overlay {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 15px 20px;
  border: none;
  color: var(--color-primary-dark);
}
.mobile-overlay:modal {
  min-width: 100%;
  min-height: 100%;
}
.mobile-overlay__close-button-wrapper {
  display: flex;
  justify-content: end;
}
.mobile-overlay__body {
  display: flex;
  justify-content: center;
}
.mobile-overlay__list {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  row-gap: 30px;
  min-height: 88vh;
}
.mobile-overlay__link {
  position: relative;
  display: inline-flex;
  align-items: center;
  line-height: 48px;
}
@media (hover: hover) {
  .mobile-overlay__link:hover::after {
    width: 100%;
  }
}
@media (hover: none) {
  .mobile-overlay__link:active::after {
    width: 100%;
  }
}
.mobile-overlay__link::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 2px;
  background-color: currentColor;
  transition-duration: inherit;
}

.burger-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 16px;
  height: 16px;
  aspect-ratio: 1;
  position: relative;
}
@media (hover: hover) {
  .burger-button:hover {
    background-color: var(--color-border-gray);
  }
}
@media (hover: none) {
  .burger-button:active {
    background-color: var(--color-border-gray);
  }
}
.burger-button::after {
  position: absolute;
  top: 3px;
  left: 2px;
  content: "";
  width: 75%;
  height: 1px;
  background-color: var(--color-primary-dark);
  box-shadow: 0 3px, 0 6px, 0 9px;
}

.cross-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 16px;
  height: 16px;
  aspect-ratio: 1;
  position: relative;
}
@media (hover: hover) {
  .cross-button:hover {
    background-color: var(--color-border-gray);
  }
}
@media (hover: none) {
  .cross-button:active {
    background-color: var(--color-border-gray);
  }
}
.cross-button::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 1px;
  background-color: var(--color-primary-dark);
  transform: rotate(-45deg);
}
.cross-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 1px;
  background-color: var(--color-primary-dark);
  border-radius: 5px;
  transform: rotate(45deg);
}/*# sourceMappingURL=styles.css.map */